<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--ItemMapper의 위치를 적어줌-->
<mapper namespace="shop.RecommendSystem.repository.mapper.ItemMapper">

    <!--아이템 객체의 속성 값들을 넣어줌-->
    <insert id="save" useGeneratedKeys="true" keyProperty="itemId" parameterType="Item">
        INSERT INTO shop_board (item_title, item_content, item_price, item_image_link)
        VALUES (#{itemTitle}, #{itemContent}, #{itemPrice}, #{itemImageLink})
    </insert>


    <insert id="insertImageInfo" useGeneratedKeys="true" keyProperty="imageId" parameterType="shop.RecommendSystem.dto.ImageInfo">
        INSERT INTO image_info (image_uuid, image_original_name, image_url, image_hash_code)
        VALUES (#{imageUuid}, #{imageOriginalName}, #{imageUrl}, #{imageHashCode})
    </insert>


    <insert id="insertImgColorTag" useGeneratedKeys="true" keyProperty="imageColorId" parameterType="Map">
        INSERT
        IGNORE INTO image_color_tag (image_color_uuid, color_tag)
        VALUES(#{uuid}, #{tag})
    </insert>


    <!--글 상세 보기-->
    <select id="findById" parameterType="Long" resultType="Item">

        SELECT s.item_id,
               s.item_title,
               s.item_content,
               s.item_date,
               s.item_price,
               i.image_url       as item_image_link,
               i.image_hash_code as hashCode
        FROM shop_board AS s
                 LEFT JOIN
             image_info AS i
             ON
                 s.item_image_link = i.image_uuid
        WHERE s.item_id = #{id};
    </select>
    <!--글 목록 및 글 관리-->
    <select id="findAll" resultType="Item" parameterType="Map">
        SELECT item_id,
               item_title,
               item_date
        FROM shop_board
        ORDER BY item_id desc
            LIMIT #{offset}, #{size}
    </select>

    <select id="findThumbnailAll" resultType="Item" parameterType="Map">
        SELECT s.item_id,
               s.item_title,
               s.item_price,
               i.image_url as item_image_link
        FROM shop_board as s
                 LEFT JOIN
             image_info AS i
             ON
                 s.item_image_link = i.image_uuid
        where s.item_image_link is not null
            LIMIT #{offset}
            , #{size}
    </select>

    <select id="countItems" resultType="long">
        SELECT COUNT(*)
        FROM shop_board
    </select>

    <delete id="delete" parameterType="Long">
        DELETE
        s, i, c
            FROM shop_board AS s
            LEFT JOIN image_info AS i
                ON s.item_image_link = i.image_uuid
            LEFT JOIN image_color_tag AS c
                ON s.item_image_link = c.image_color_uuid
            WHERE s.item_id =#{id};
    </delete>

</mapper>